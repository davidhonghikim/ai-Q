{
  "title": "Pantry System Documentation",
  "version": "2.0.0",
  "last_updated": "2025-07-05T23:53:23Z",
  "purpose": "Central registry for all atomic, reusable ingredients (tasks, modules, skills, tools, configs) used in recipes with intelligent caching support.",
  "structure": {
    "tasks": "Atomic, single-purpose actions (e.g., pull docker image, run script)",
    "modules": "Reusable logic blocks or service definitions (e.g., database setup, monitoring stack)",
    "skills": "Agent abilities or specialized functions (e.g., run pytest, extract text)",
    "tools": "External binaries, scripts, or APIs required for tasks (e.g., docker, curl)",
    "configs": "Reusable configuration templates or files (e.g., docker-compose.yml, .env)"
  },
  "usage": {
    "reference": "Recipes import ingredients by registry ID and version.",
    "query": "Pantry index supports search by type, tag, dependency, or usage.",
    "audit": "All items are versioned, signed, and auditable.",
    "caching": "Ingredients can be cached for improved performance and reduced execution time."
  },
  "caching_system": {
    "description": "Intelligent caching for pantry ingredients",
    "features": [
      "Cache ingredient results based on inputs and version",
      "Configurable cache TTL and invalidation rules",
      "Multiple cache locations (local, shared, remote)",
      "Validation methods (signature, timestamp, content hash)",
      "Automatic cache cleanup and management"
    ],
    "cache_configuration": {
      "cacheable": "Whether the ingredient can be cached",
      "cache_key": "Custom cache key or auto-generated from ID and inputs",
      "cache_ttl": "Time to live for cache entries",
      "cache_invalidation": "Conditions that invalidate the cache",
      "cache_location": "Where to store cache (local/shared/remote)",
      "cache_validation": "How to validate cached results"
    }
  },
  "extensibility": "New ingredients can be added without breaking existing recipes. All changes are logged and cached appropriately.",
  "example_query": "Find all tasks tagged 'docker' or all recipes using skill 'run-pytest'.",
  "cache_example": "Docker image pull results are cached for 24 hours and validated using content hash.",
  "metadata": {
    "title": "Untitled Recipe",
    "version": "1.0.0",
    "created_by": "Claude Sonnet 4",
    "creation_date": "2025-07-07T14:50:23.542999Z",
    "last_updated": "2025-07-07T14:50:23.542999Z"
  },
  "steps": [
    {
      "step_id": "STEP-01",
      "description": "Default step - needs implementation",
      "command": "echo 'Step needs implementation'",
      "expected_output": "Step completed",
      "error_handling": "Continue on error"
    }
  ],
  "inputs": {
    "default_input": {
      "type": "string",
      "required": false,
      "default": "default_value",
      "description": "Default input parameter"
    }
  },
  "outputs": {
    "default_output": {
      "type": "string",
      "description": "Default output parameter"
    }
  }
}