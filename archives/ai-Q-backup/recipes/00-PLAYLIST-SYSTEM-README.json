{
  "metadata": {
    "title": "AI-Q Universal Digital Twin - Master Recipe System",
    "version": "2.0.0", 
    "created_by": "Claude Sonnet 4",
    "last_updated": "2025-01-30T00:00:00Z",
    "purpose": "Master guide for agent-proof, atomic task execution recipes"
  },
  "system_overview": {
    "vision": "Universal Digital Twin that ingests, processes, and intelligently organizes ALL data types with advanced AI understanding",
    "architecture": "Multi-modal AI system with object storage, vector database, graph database, and unified API",
    "target_scale": "Production-ready system handling terabytes of multi-modal data",
    "agent_compatibility": "All tasks designed for any AI agent/model with clear boundaries and acceptance criteria"
  },
  "recipe_organization": {
    "structure": "Sequential recipes with explicit dependencies and merge points",
    "naming_convention": "[##]-[MODULE]-[CATEGORY]-recipe.json",
    "task_size": "1500-2000 tokens per task with comprehensive instructions and examples",
    "dependencies": "Explicit dependency chains with validation checkpoints",
    "total_recipes": 12,
    "total_tasks": 500,
    "tasks_per_recipe": "40-50 tasks per recipe",
    "recipe_token_size": "80000-90000 tokens per recipe (fills context window)",
    "execution_tokens": "20000-30000 tokens remaining for agent execution and handoff"
  },
  "execution_phases": {
    "phase_1_infrastructure": {
      "duration": "Week 1-2",
      "recipes": [
        "01-core-infrastructure-recipe.json",
        "02-storage-systems-recipe.json",
        "03-database-setup-recipe.json"
      ],
      "deliverable": "Complete infrastructure foundation with all storage systems operational"
    },
    "phase_2_api_foundation": {
      "duration": "Week 3-4", 
      "recipes": [
        "04-unified-api-recipe.json",
        "05-authentication-recipe.json",
        "06-basic-ingestion-recipe.json"
      ],
      "deliverable": "REST/GraphQL API with authentication and basic file upload"
    },
    "phase_3_ai_processing": {
      "duration": "Week 5-7",
      "recipes": [
        "07-text-ai-recipe.json",
        "08-image-ai-recipe.json", 
        "09-video-audio-ai-recipe.json"
      ],
      "deliverable": "Multi-modal AI processing for all content types"
    },
    "phase_4_intelligence": {
      "duration": "Week 8-9",
      "recipes": [
        "10-semantic-search-recipe.json",
        "11-knowledge-graph-recipe.json"
      ],
      "deliverable": "Advanced search and relationship understanding"
    },
    "phase_5_interface": {
      "duration": "Week 10-11",
      "recipes": [
        "12-web-dashboard-recipe.json"
      ],
      "deliverable": "Complete web interface and user experience"
    }
  },
  "agent_instructions": {
    "task_execution": [
      "Read task JSON completely before starting",
      "Verify all dependencies are completed",
      "Follow exact file paths and naming conventions",
      "Run all test commands to validate completion",
      "Update task status upon completion"
    ],
    "error_handling": [
      "If task fails, document specific error in task notes",
      "Do not proceed to dependent tasks",
      "Mark task as 'needs_review' status",
      "Include exact error messages and context"
    ],
    "communication": [
      "Use structured logging for all actions",
      "Include agent identification in all commits/changes",
      "Document any deviations from task specifications",
      "Provide completion summary with validation results"
    ]
  },
  "quality_standards": {
    "code_requirements": [
      "Production-ready code only",
      "Comprehensive error handling",
      "Complete type annotations",
      "Full test coverage",
      "Security best practices"
    ],
    "configuration": [
      "All settings via environment variables or config files",
      "No hardcoded values",
      "Schema validation for all configs",
      "Clear documentation for all parameters"
    ],
    "testing": [
      "Unit tests for all functions",
      "Integration tests for all APIs",
      "Performance benchmarks",
      "Security validation"
    ]
  },
  "tech_stack": {
    "backend": {
      "api_framework": "FastAPI with Pydantic v2",
      "database": "PostgreSQL 15+ with SQLAlchemy",
      "object_storage": "Minio (S3-compatible)",
      "vector_database": "Weaviate with CLIP and transformers",
      "graph_database": "Neo4j with APOC plugins",
      "cache": "Redis for sessions and rate limiting",
      "queue": "Redis with RQ for background jobs"
    },
    "ai_engines": {
      "text_processing": "Ollama with llama3.1, Whisper for transcription",
      "image_processing": "CLIP, BLIP-2, Tesseract OCR, OpenCV",
      "video_processing": "FFmpeg, PyTorch Video, scene detection",
      "audio_processing": "Whisper, pyannote for speaker ID",
      "embeddings": "sentence-transformers, OpenAI embeddings"
    },
    "frontend": {
      "framework": "React 18 with TypeScript",
      "ui_library": "Material-UI v5",
      "build_tool": "Vite with hot reload",
      "state_management": "Zustand with persistence",
      "visualization": "D3.js for graphs, Chart.js for metrics"
    },
    "infrastructure": {
      "containerization": "Docker with multi-stage builds",
      "orchestration": "Docker Compose for development",
      "monitoring": "Prometheus + Grafana",
      "logging": "Structured logging with JSON format",
      "security": "OAuth2, JWT, rate limiting, HTTPS"
    }
  },
  "validation_framework": {
    "automated_checks": [
      "Schema validation for all JSON/YAML",
      "Code quality with pylint/flake8",
      "Security scanning with bandit",
      "Dependency vulnerability scanning",
      "Performance regression testing"
    ],
    "integration_testing": [
      "End-to-end workflow testing",
      "Multi-modal upload and processing",
      "Search accuracy validation",
      "API response time benchmarks",
      "Data consistency verification"
    ],
    "acceptance_criteria": [
      "All APIs return valid responses",
      "All file types process successfully", 
      "Search returns relevant results",
      "Performance meets benchmarks",
      "Security controls are active"
    ]
  }
} 