{
  "recipe_metadata": {
    "recipe_id": "02-AI-SERVICE-MODEL-MANAGEMENT-004",
    "title": "LLM Model Management",
    "version": "1.0.0",
    "created_by": "Gemini",
    "creation_date": "2025-07-05T00:00:00Z",
    "difficulty_level": "expert",
    "total_tasks": 2
  },
  "recipe_overview": {
    "description": "Manages the local LLMs. This includes pulling default models, selecting the optimal model based on the hardware profile, and allowing user overrides. It will fetch standard, function-calling, and hardware-optimal models.",
    "technology_stack": {
      "language": "Python",
      "llm_server": "Ollama"
    },
    "deliverables": [
      "A configuration file for model management.",
      "Scripts to interact with the Ollama API to pull and list models.",
      "Logic to select the best model based on hardware constraints and user preferences."
    ]
  },
  "tasks": [
    {
      "id": "40-04A",
      "title": "Create Model Configuration",
      "description": "Create a configuration file that defines the default models, function-calling models, and maps hardware profiles to optimal models.",
      "dependencies": ["40-001"],
      "estimated_time": "15 minutes",
      "files_to_create": [
        "config/ai_services/model_config.yml"
      ],
      "acceptance_criteria": [
        "The model_config.yml is created with sections for default, function-calling, and hardware-specific models."
      ]
    },
    {
      "id": "40-04B",
      "title": "Implement Model Management Scripts",
      "description": "Develop a Python script to read the hardware profile and model config, then interact with the Ollama API to pull the required models.",
      "dependencies": ["40-002", "40-04A"],
      "estimated_time": "45 minutes",
      "commands": [
        "python scripts/system/model_manager.py --pull-defaults"
      ],
      "files_to_create": [
        "scripts/system/model_manager.py"
      ],
      "acceptance_criteria": [
        "Script correctly reads hardware_profile.json and model_config.yml.",
        "Script pulls the default base model (e.g., 'llama3').",
        "Script pulls a default function-calling model (e.g., 'gemma2').",
        "Script pulls the optimal model based on the detected hardware.",
        "User-defined models in the config are also pulled."
      ]
    }
  ]
} 