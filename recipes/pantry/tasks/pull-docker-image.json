{
  "id": "task:pull-docker-image:1.0.0",
  "type": "task",
  "name": "Pull Docker Image",
  "version": "1.0.0",
  "description": "Pulls a Docker image from a registry with validation and error handling",
  "atomic_steps": [
    {
      "step_id": "PULL-01",
      "command": "docker pull ${image_name}:${image_tag}",
      "description": "Pull the specified Docker image from registry",
      "expected_output": "Status: Downloaded newer image for ${image_name}:${image_tag}",
      "error_handling": "If pull fails, retry up to 3 times with 5 second delays"
    },
    {
      "step_id": "PULL-02",
      "command": "docker images ${image_name}:${image_tag} --format 'table {{.Repository}}\\t{{.Tag}}\\t{{.Size}}'",
      "description": "Verify the image was pulled successfully",
      "expected_output": "Repository\\s+Tag\\s+Size",
      "error_handling": "If image not found, fail with clear error message"
    }
  ],
  "inputs": {
    "image_name": {
      "type": "string",
      "required": true,
      "description": "Name of the Docker image to pull"
    },
    "image_tag": {
      "type": "string",
      "required": false,
      "default": "latest",
      "description": "Tag of the Docker image to pull"
    },
    "registry": {
      "type": "string",
      "required": false,
      "default": "docker.io",
      "description": "Docker registry to pull from"
    }
  },
  "outputs": {
    "image_id": {
      "type": "string",
      "description": "Full image ID of the pulled image"
    },
    "image_size": {
      "type": "string",
      "description": "Size of the pulled image"
    },
    "pull_status": {
      "type": "string",
      "description": "Status of the pull operation"
    }
  },
  "dependencies": [
    "tool:docker:24.0.0"
  ],
  "tags": [
    "docker",
    "container",
    "image",
    "pull",
    "infrastructure"
  ],
  "author": "Claude Sonnet 4",
  "last_updated": "2025-07-05T23:55:00Z",
  "signature": "sha256:abc123def456...",
  "caching": {
    "cacheable": true,
    "cache_key": "docker-image:${image_name}:${image_tag}",
    "cache_ttl": 86400,
    "cache_invalidation": [
      "docker image removed",
      "registry updated",
      "network connectivity lost"
    ],
    "cache_location": "local",
    "cache_validation": {
      "method": "content_hash",
      "validation_command": "docker images ${image_name}:${image_tag} --format '{{.ID}}'"
    }
  },
  "validation": {
    "pre_execution": [
      "Check if Docker is installed and running",
      "Verify network connectivity to registry",
      "Validate image name format"
    ],
    "post_execution": [
      "Verify image exists in local registry",
      "Check image size is reasonable (> 0 bytes)",
      "Validate image can be listed with docker images"
    ]
  },
  "example_usage": {
    "inputs": {
      "image_name": "ollama/ollama",
      "image_tag": "latest",
      "registry": "docker.io"
    },
    "expected_outputs": {
      "image_id": "ollama/ollama:latest",
      "image_size": "1.2GB",
      "pull_status": "success"
    }
  }
} 