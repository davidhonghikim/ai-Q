{
  "id": "skill:run-docker-compose:1.0.0",
  "type": "skill",
  "name": "Run Docker Compose",
  "version": "1.0.0",
  "description": "Agent skill for running Docker Compose commands with proper validation and error handling",
  "atomic_steps": [
    {
      "step_id": "COMPOSE-01",
      "command": "docker-compose -f ${compose_file} config",
      "description": "Validate Docker Compose file syntax",
      "expected_output": "services:",
      "error_handling": "If validation fails, provide detailed error message and stop execution"
    },
    {
      "step_id": "COMPOSE-02",
      "command": "docker-compose -f ${compose_file} ${action} ${services}",
      "description": "Execute the specified Docker Compose action",
      "expected_output": "Creating|Starting|Stopping|Removing",
      "error_handling": "If action fails, attempt rollback and provide detailed error information"
    },
    {
      "step_id": "COMPOSE-03",
      "command": "docker-compose -f ${compose_file} ps",
      "description": "Verify service status after action",
      "expected_output": "Name\\s+Command\\s+State\\s+Ports",
      "error_handling": "If verification fails, log warning but don't fail the skill"
    }
  ],
  "inputs": {
    "compose_file": {
      "type": "file",
      "required": true,
      "description": "Path to the Docker Compose file"
    },
    "action": {
      "type": "string",
      "required": true,
      "enum": ["up", "down", "start", "stop", "restart", "build"],
      "description": "Docker Compose action to perform"
    },
    "services": {
      "type": "string",
      "required": false,
      "description": "Specific services to target (comma-separated)"
    },
    "detached": {
      "type": "boolean",
      "required": false,
      "default": true,
      "description": "Run in detached mode"
    }
  },
  "outputs": {
    "service_status": {
      "type": "json",
      "description": "Status of all services after action"
    },
    "action_result": {
      "type": "string",
      "description": "Result of the Docker Compose action"
    },
    "container_count": {
      "type": "number",
      "description": "Number of containers affected"
    }
  },
  "dependencies": [
    "tool:docker:24.0.0",
    "tool:docker-compose:2.0.0"
  ],
  "tags": [
    "docker",
    "compose",
    "container",
    "orchestration",
    "infrastructure"
  ],
  "author": "Claude Sonnet 4",
  "last_updated": "2025-07-05T23:55:00Z",
  "signature": "sha256:def456ghi789...",
  "validation": {
    "pre_execution": [
      "Verify Docker Compose file exists and is readable",
      "Check if Docker daemon is running",
      "Validate action parameter is supported",
      "Ensure sufficient disk space for containers"
    ],
    "post_execution": [
      "Verify services are in expected state",
      "Check container health status",
      "Validate network connectivity between services"
    ]
  },
  "example_usage": {
    "inputs": {
      "compose_file": "docker-compose.yml",
      "action": "up",
      "services": "ollama,openwebui",
      "detached": true
    },
    "expected_outputs": {
      "service_status": {
        "ollama": "running",
        "openwebui": "running"
      },
      "action_result": "success",
      "container_count": 2
    }
  }
} 