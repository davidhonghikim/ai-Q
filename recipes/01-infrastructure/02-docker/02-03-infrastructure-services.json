{
  "metadata": {
    "sub_recipe_id": "02-05-infrastructure-services",
    "title": "Docker Infrastructure for Infrastructure Services",
    "version": "1.0.0",
    "created_by": "Claude Sonnet 4",
    "last_updated": "2025-01-30T23:58:00Z",
    "purpose": "Establish Docker infrastructure foundation for infrastructure services - networks, volumes, and orchestration framework",
    "total_tasks": 3,
    "estimated_duration": "30 minutes",
    "complexity": "Intermediate",
    "dependencies": {
      "prerequisites": ["02-01-docker-core", "02-02-docker-services"],
      "required_services": ["docker", "docker-compose"],
      "required_networks": ["ai-q-network", "ai-q-monitoring", "ai-q-services"],
      "required_volumes": ["ai-q-data", "ai-q-config", "ai-q-logs"],
      "required_ports": [],
      "required_files": ["/opt/ai-q/docker/", "/opt/ai-q/docker/compose/"]
    },
    "port_assignments": {
      "infrastructure_network": "ai-q-infrastructure-network",
      "infrastructure_volumes": ["ai-q-infrastructure-data", "ai-q-infrastructure-config", "ai-q-infrastructure-db"],
      "notes": "Infrastructure only - actual services installed by specialized recipes"
    }
  },
  "prerequisites": {
    "completed_tasks": [
      "02-01-01: Docker environment setup",
      "02-01-02: Network architecture configured",
      "02-01-03: Volume management setup",
      "02-02-01: Docker services orchestration"
    ],
    "system_requirements": {
      "cpu": "Minimum 2 cores for infrastructure services",
      "ram": "Minimum 4GB for infrastructure services",
      "storage": "Minimum 50GB for infrastructure data and databases",
      "network": "Stable network for future service communication"
    }
  },
  "task_01_create_infrastructure_network": {
    "task_id": "02-05-01",
    "title": "Create Infrastructure Services Network",
    "description": "Create dedicated Docker network for infrastructure services",
    "estimated_duration": "5 minutes",
    "critical": true,
    "steps": [
      {
        "step_id": "02-05-01-01",
        "title": "Create infrastructure network",
        "description": "Create dedicated network for infrastructure services",
        "commands": [
          "docker network create --driver bridge --subnet 172.22.0.0/16 --gateway 172.22.0.1 ai-q-infrastructure-network",
          "docker network ls --filter name=ai-q-infrastructure-network"
        ],
        "verification": "Check network created",
        "expected_output": "ai-q-infrastructure-network network created and listed"
      }
    ],
    "verification_commands": [
      "docker network ls --filter name=ai-q-infrastructure-network",
      "docker network inspect ai-q-infrastructure-network --format '{{.IPAM.Config}}'"
    ],
    "expected_outputs": {
      "network_exists": "ai-q-infrastructure-network in network list",
      "subnet_correct": "Subnet: 172.22.0.0/16, Gateway: 172.22.0.1"
    }
  },
  "task_02_create_infrastructure_volumes": {
    "task_id": "02-05-02",
    "title": "Create Infrastructure Data Volumes",
    "description": "Create persistent volumes for infrastructure services data",
    "estimated_duration": "10 minutes",
    "critical": true,
    "steps": [
      {
        "step_id": "02-05-02-01",
        "title": "Create infrastructure data volumes",
        "description": "Create volumes for infrastructure services data storage",
        "commands": [
          "docker volume create ai-q-infrastructure-data",
          "docker volume create ai-q-infrastructure-config",
          "docker volume create ai-q-infrastructure-db",
          "docker volume create ai-q-infrastructure-cache",
          "docker volume create ai-q-infrastructure-logs"
        ],
        "verification": "Check volumes created",
        "expected_output": "All infrastructure volumes created successfully"
      },
      {
        "step_id": "02-05-02-02",
        "title": "Set volume permissions",
        "description": "Set appropriate permissions for infrastructure volumes",
        "commands": [
          "sudo chown -R 1000:1000 /var/lib/docker/volumes/ai-q-infrastructure-data/_data",
          "sudo chown -R 1000:1000 /var/lib/docker/volumes/ai-q-infrastructure-config/_data",
          "sudo chown -R 1000:1000 /var/lib/docker/volumes/ai-q-infrastructure-db/_data",
          "sudo chown -R 1000:1000 /var/lib/docker/volumes/ai-q-infrastructure-cache/_data",
          "sudo chown -R 1000:1000 /var/lib/docker/volumes/ai-q-infrastructure-logs/_data"
        ],
        "verification": "Check permissions set",
        "expected_output": "Volume permissions set correctly"
      }
    ],
    "verification_commands": [
      "docker volume ls --filter name=ai-q-infrastructure",
      "ls -la /var/lib/docker/volumes/ai-q-infrastructure-data/_data"
    ],
    "expected_outputs": {
      "volumes_exist": "All ai-q-infrastructure volumes listed",
      "permissions_correct": "Volumes owned by user 1000:1000"
    }
  },
  "task_03_create_infrastructure_orchestration": {
    "task_id": "02-05-03",
    "title": "Create Infrastructure Orchestration Framework",
    "description": "Create Docker Compose templates and orchestration framework for infrastructure services",
    "estimated_duration": "15 minutes",
    "critical": true,
    "steps": [
      {
        "step_id": "02-05-03-01",
        "title": "Create infrastructure orchestration directory",
        "description": "Create directory structure for infrastructure orchestration",
        "commands": [
          "sudo mkdir -p /opt/ai-q/docker/compose/infrastructure",
          "sudo mkdir -p /opt/ai-q/docker/compose/infrastructure/templates",
          "sudo mkdir -p /opt/ai-q/docker/compose/infrastructure/configs",
          "sudo mkdir -p /opt/ai-q/docker/compose/infrastructure/databases"
        ],
        "verification": "Check directories created",
        "expected_output": "Infrastructure orchestration directories created"
      },
      {
        "step_id": "02-05-03-02",
        "title": "Create base infrastructure Docker Compose template",
        "description": "Create base template for infrastructure services",
        "config_file": "/opt/ai-q/docker/compose/infrastructure/templates/base-infrastructure.yml",
        "config_content": {
          "version": "3.8",
          "networks": {
            "ai-q-infrastructure-network": {
              "external": true
            }
          },
          "volumes": {
            "infrastructure-data": {
              "external": true
            },
            "infrastructure-config": {
              "external": true
            },
            "infrastructure-db": {
              "external": true
            },
            "infrastructure-cache": {
              "external": true
            },
            "infrastructure-logs": {
              "external": true
            }
          }
        },
        "commands": [
          "sudo tee /opt/ai-q/docker/compose/infrastructure/templates/base-infrastructure.yml << 'EOF'\nversion: '3.8'\n\nnetworks:\n  ai-q-infrastructure-network:\n    external: true\n\nvolumes:\n  infrastructure-data:\n    external: true\n  infrastructure-config:\n    external: true\n  infrastructure-db:\n    external: true\n  infrastructure-cache:\n    external: true\n  infrastructure-logs:\n    external: true\nEOF"
        ],
        "verification": "Check template created",
        "expected_output": "Base infrastructure template created"
      },
      {
        "step_id": "02-05-03-03",
        "title": "Create infrastructure orchestration script",
        "description": "Create orchestration script for infrastructure services",
        "config_file": "/opt/ai-q/docker/compose/infrastructure/orchestrate-infrastructure.sh",
        "config_content": {
          "script_purpose": "Orchestrate infrastructure services using Docker Compose",
          "functions": [
            "start_infrastructure_service(service_name)",
            "stop_infrastructure_service(service_name)",
            "restart_infrastructure_service(service_name)",
            "check_infrastructure_service_status(service_name)",
            "backup_infrastructure_data(service_name)"
          ]
        },
        "commands": [
          "sudo tee /opt/ai-q/docker/compose/infrastructure/orchestrate-infrastructure.sh << 'EOF'\n#!/bin/bash\n\n# Infrastructure Services Orchestration Script\n# This script provides functions for managing infrastructure services\n\nINFRASTRUCTURE_DIR=\"/opt/ai-q/docker/compose/infrastructure\"\n\nstart_infrastructure_service() {\n    local service_name=\$1\n    local compose_file=\"\$INFRASTRUCTURE_DIR/\${service_name}.yml\"\n    \n    if [ -f \"\$compose_file\" ]; then\n        echo \"Starting \$service_name...\"\n        docker-compose -f \"\$compose_file\" up -d\n    else\n        echo \"Error: \$compose_file not found\"\n        return 1\n    fi\n}\n\nstop_infrastructure_service() {\n    local service_name=\$1\n    local compose_file=\"\$INFRASTRUCTURE_DIR/\${service_name}.yml\"\n    \n    if [ -f \"\$compose_file\" ]; then\n        echo \"Stopping \$service_name...\"\n        docker-compose -f \"\$compose_file\" down\n    else\n        echo \"Error: \$compose_file not found\"\n        return 1\n    fi\n}\n\nrestart_infrastructure_service() {\n    local service_name=\$1\n    stop_infrastructure_service \"\$service_name\"\n    sleep 5\n    start_infrastructure_service \"\$service_name\"\n}\n\ncheck_infrastructure_service_status() {\n    local service_name=\$1\n    local compose_file=\"\$INFRASTRUCTURE_DIR/\${service_name}.yml\"\n    \n    if [ -f \"\$compose_file\" ]; then\n        echo \"Checking status of \$service_name...\"\n        docker-compose -f \"\$compose_file\" ps\n    else\n        echo \"Error: \$compose_file not found\"\n        return 1\n    fi\n}\n\nbackup_infrastructure_data() {\n    local service_name=\$1\n    local backup_dir=\"/opt/ai-q/backups/infrastructure/\${service_name}\"\n    local timestamp=\$(date +%Y%m%d_%H%M%S)\n    \n    echo \"Creating backup for \$service_name...\"\n    sudo mkdir -p \"\$backup_dir\"\n    \n    # Backup volumes\n    docker run --rm -v ai-q-infrastructure-data:/data -v \"\$backup_dir\":/backup alpine tar czf /backup/\${service_name}_\${timestamp}.tar.gz -C /data .\n    \n    echo \"Backup created: \${backup_dir}/\${service_name}_\${timestamp}.tar.gz\"\n}\n\n# Main script logic\ncase \"\$1\" in\n    start)\n        start_infrastructure_service \"\$2\"\n        ;;\n    stop)\n        stop_infrastructure_service \"\$2\"\n        ;;\n    restart)\n        restart_infrastructure_service \"\$2\"\n        ;;\n    status)\n        check_infrastructure_service_status \"\$2\"\n        ;;\n    backup)\n        backup_infrastructure_data \"\$2\"\n        ;;\n    *)\n        echo \"Usage: \$0 {start|stop|restart|status|backup} <service_name>\"\n        exit 1\n        ;;\nesac\nEOF",
          "sudo chmod +x /opt/ai-q/docker/compose/infrastructure/orchestrate-infrastructure.sh"
        ],
        "verification": "Check script created and executable",
        "expected_output": "Infrastructure orchestration script created and executable"
      }
    ],
    "verification_commands": [
      "ls -la /opt/ai-q/docker/compose/infrastructure/",
      "cat /opt/ai-q/docker/compose/infrastructure/templates/base-infrastructure.yml",
      "/opt/ai-q/docker/compose/infrastructure/orchestrate-infrastructure.sh --help"
    ],
    "expected_outputs": {
      "directory_structure": "infrastructure directory with templates and configs",
      "base_template": "Base infrastructure template with networks and volumes",
      "orchestration_script": "Orchestration script is executable"
    }
  },
  "acceptance_criteria": {
    "infrastructure_ready": [
      "ai-q-infrastructure-network Docker network exists and is configured",
      "All infrastructure volumes (data, config, db, cache, logs) created and accessible",
      "Infrastructure orchestration directory structure created",
      "Base infrastructure Docker Compose template available",
      "Infrastructure orchestration script created and executable"
    ],
    "no_services_installed": [
      "No actual infrastructure services (PostgreSQL, Redis, MinIO, etc.) are installed",
      "Only infrastructure foundation is established",
      "Ready for specialized recipes to install actual services"
    ],
    "integration_ready": [
      "Network can be used by other infrastructure service recipes",
      "Volumes can be mounted by other infrastructure service recipes",
      "Orchestration framework ready for service management"
    ]
  },
  "deliverables": {
    "infrastructure_components": [
      "Docker network: ai-q-infrastructure-network (172.22.0.0/16)",
      "Docker volumes: ai-q-infrastructure-data, ai-q-infrastructure-config, ai-q-infrastructure-db, ai-q-infrastructure-cache, ai-q-infrastructure-logs",
      "Orchestration directory: /opt/ai-q/docker/compose/infrastructure/",
      "Base template: /opt/ai-q/docker/compose/infrastructure/templates/base-infrastructure.yml",
      "Orchestration script: /opt/ai-q/docker/compose/infrastructure/orchestrate-infrastructure.sh"
    ],
    "documentation": [
      "Infrastructure services infrastructure setup complete",
      "Ready for specialized recipes to install actual services",
      "Orchestration framework available for service management"
    ]
  },
  "troubleshooting_guide": {
    "network_creation_failed": {
      "issue": "Docker network creation fails",
      "solution": "Check if network already exists: docker network ls | grep ai-q-infrastructure-network",
      "commands": [
        "docker network rm ai-q-infrastructure-network",
        "docker network create --driver bridge --subnet 172.22.0.0/16 --gateway 172.22.0.1 ai-q-infrastructure-network"
      ]
    },
    "volume_permissions_error": {
      "issue": "Volume permissions not set correctly",
      "solution": "Check Docker daemon user and set correct permissions",
      "commands": [
        "sudo chown -R 1000:1000 /var/lib/docker/volumes/ai-q-infrastructure-*/_data",
        "sudo chmod -R 755 /var/lib/docker/volumes/ai-q-infrastructure-*/_data"
      ]
    },
    "orchestration_script_not_executable": {
      "issue": "Orchestration script not executable",
      "solution": "Set executable permissions on the script",
      "commands": [
        "sudo chmod +x /opt/ai-q/docker/compose/infrastructure/orchestrate-infrastructure.sh",
        "ls -la /opt/ai-q/docker/compose/infrastructure/orchestrate-infrastructure.sh"
      ]
    }
  },
  "performance_benchmarks": {
    "network_creation": "Docker network creation completes within 5 seconds",
    "volume_creation": "All volumes created within 10 seconds",
    "orchestration_setup": "Complete orchestration framework setup within 30 seconds",
    "script_execution": "Orchestration script responds within 2 seconds"
  },
  "next_steps": {
    "immediate": "Infrastructure ready for specialized infrastructure service recipes",
    "future": "Specialized recipes will install actual infrastructure services using this infrastructure",
    "integration": "Services will use ai-q-infrastructure-network and mounted volumes"
  }
} 