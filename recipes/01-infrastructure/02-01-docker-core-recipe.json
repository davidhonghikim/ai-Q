{
  "recipe_metadata": {
    "recipe_id": "02-01-DOCKER-CORE-FOUNDATION",
    "title": "Docker Core Foundation - Environment and Network Setup",
    "version": "5.0.0",
    "created_by": "Claude Sonnet 4",
    "creation_date": "2025-01-28T20:00:00Z",
    "last_updated": "2025-01-28T20:00:00Z",
    "estimated_tokens": 45000,
    "estimated_execution_time": "90 minutes",
    "difficulty_level": "expert",
    "total_tasks": 3,
    "agent_autonomy_level": "95%",
    "success_rate_target": "99%",
    "compliance_standards": ["SOC 2", "ISO 27001"],
    "architecture_tier": "enterprise-containerization",
    "description": "Core Docker environment and network foundation with exact specifications, atomic tasks, and zero technical debt",
    "is_master_recipe": false,
    "part_of_series": "02-unified-docker-system",
    "series_order": 1,
    "dependencies": ["01-core-infrastructure-recipe.json"],
    "kitchen_system": {
      "pantry_category": "infrastructure",
      "cooking_time": "90 minutes",
      "complexity": "expert",
      "kitchen_tools": ["docker_orchestration", "network_configuration", "environment_setup"],
      "cache_strategy": "docker_core_cache",
      "orchestrator_priority": "critical"
    }
  },
  "recipe_overview": {
    "name": "Docker Core Foundation",
    "description": "Core Docker environment setup with network configuration, volume management, and basic service deployment foundation",
    "prerequisites": [
      "Ubuntu 22.04 LTS or Windows 11 with WSL2",
      "Minimum 16GB RAM, 8 CPU cores",
      "100GB free disk space",
      "Docker Engine 24.0+ installed",
      "Docker Compose 2.20+ installed",
      "Git 2.35+ installed"
    ],
    "target_outcome": "Production-ready Docker foundation with zero technical debt",
    "success_criteria": [
      "Docker environment properly configured with exact specifications",
      "Network architecture operational with isolated subnets",
      "Volume management system functional",
      "Basic service deployment framework ready",
      "All components can be safely installed/uninstalled"
    ]
  },
  "pantry_ingredients": {
    "tasks": [
      {
        "task_id": "DOCKER_ENVIRONMENT_SETUP_TASK",
        "name": "Docker Environment Setup",
        "description": "Create production-ready Docker environment with exact configurations",
        "estimated_time": "30 minutes",
        "dependencies": [],
        "skills_required": ["docker_orchestration", "container_management", "network_configuration"],
        "exact_commands": [
          "mkdir -p /opt/ai-q/{data,config,logs,backups}",
          "chmod 755 /opt/ai-q",
          "mkdir -p /opt/ai-q/docker/{compose,volumes,networks}",
          "chmod 755 /opt/ai-q/docker",
          "docker system prune -f",
          "docker volume prune -f"
        ],
        "validation_commands": [
          "ls -la /opt/ai-q/",
          "docker system df",
          "docker volume ls"
        ]
      },
      {
        "task_id": "NETWORK_ARCHITECTURE_TASK",
        "name": "Network Architecture Setup",
        "description": "Create isolated network architecture with exact subnet configurations",
        "estimated_time": "30 minutes",
        "dependencies": ["DOCKER_ENVIRONMENT_SETUP_TASK"],
        "skills_required": ["network_configuration", "subnet_management", "security_isolation"],
        "exact_commands": [
          "docker network create ai-q-network --subnet=172.20.0.0/16 --driver bridge",
          "docker network create ai-q-monitoring --subnet=172.21.0.0/16 --driver bridge",
          "docker network create ai-q-services --subnet=172.22.0.0/16 --driver bridge",
          "docker network create ai-q-storage --subnet=172.23.0.0/16 --driver bridge",
          "docker network create ai-q-databases --subnet=172.24.0.0/16 --driver bridge"
        ],
        "validation_commands": [
          "docker network ls --filter name=ai-q",
          "docker network inspect ai-q-network",
          "docker network inspect ai-q-monitoring"
        ]
      },
      {
        "task_id": "VOLUME_MANAGEMENT_TASK",
        "name": "Volume Management Setup",
        "description": "Setup persistent volume management with exact configurations",
        "estimated_time": "30 minutes",
        "dependencies": ["NETWORK_ARCHITECTURE_TASK"],
        "skills_required": ["volume_management", "persistence_configuration", "backup_strategy"],
        "exact_commands": [
          "docker volume create ai-q-data",
          "docker volume create ai-q-config",
          "docker volume create ai-q-logs",
          "docker volume create ai-q-backups",
          "docker volume create ai-q-cache"
        ],
        "validation_commands": [
          "docker volume ls --filter name=ai-q",
          "docker volume inspect ai-q-data",
          "docker volume inspect ai-q-config"
        ]
      }
    ],
    "skills": [
      {
        "skill_id": "DOCKER_ORCHESTRATION_SKILL",
        "name": "Docker Orchestration",
        "description": "Orchestrate Docker containers and services with exact procedures",
        "tools": ["docker", "docker_compose", "docker_swarm"],
        "validation": "docker_orchestration_validation",
        "exact_validation_commands": [
          "docker ps --format 'table {{.Names}}\t{{.Status}}\t{{.Ports}}'",
          "docker network ls --filter name=ai-q",
          "docker-compose config --quiet"
        ]
      },
      {
        "skill_id": "NETWORK_CONFIGURATION_SKILL",
        "name": "Network Configuration",
        "description": "Configure Docker networks with exact specifications",
        "tools": ["docker_network", "subnet_management", "network_isolation"],
        "validation": "network_configuration_validation",
        "exact_validation_commands": [
          "docker network ls --filter name=ai-q",
          "docker network inspect ai-q-network --format '{{.IPAM.Config}}'",
          "docker network inspect ai-q-monitoring --format '{{.IPAM.Config}}'"
        ]
      },
      {
        "skill_id": "VOLUME_MANAGEMENT_SKILL",
        "name": "Volume Management",
        "description": "Manage Docker volumes with exact specifications",
        "tools": ["docker_volume", "persistence_management", "backup_configuration"],
        "validation": "volume_management_validation",
        "exact_validation_commands": [
          "docker volume ls --filter name=ai-q",
          "docker volume inspect ai-q-data --format '{{.Mountpoint}}'",
          "docker volume inspect ai-q-config --format '{{.Mountpoint}}'"
        ]
      }
    ],
    "tools": [
      {
        "tool_id": "DOCKER_CORE_TOOL",
        "name": "Docker Core Engine",
        "description": "Core Docker environment orchestration",
        "file_path": "src/services/infrastructure/docker_core.py",
        "config": "config/infrastructure/docker_core_config.json",
        "exact_config_spec": {
          "docker_compose_version": "3.8",
          "network_subnet": "172.20.0.0/16",
          "monitoring_subnet": "172.21.0.0/16",
          "services_subnet": "172.22.0.0/16",
          "storage_subnet": "172.23.0.0/16",
          "databases_subnet": "172.24.0.0/16"
        }
      },
      {
        "tool_id": "NETWORK_MANAGER_TOOL",
        "name": "Network Manager",
        "description": "Docker network management and configuration",
        "file_path": "src/services/infrastructure/network_manager.py",
        "config": "config/infrastructure/network_config.json",
        "exact_config_spec": {
          "network_driver": "bridge",
          "enable_ipv6": false,
          "internal_networks": false,
          "network_attachable": true,
          "network_labels": ["ai-q-system"]
        }
      },
      {
        "tool_id": "VOLUME_MANAGER_TOOL",
        "name": "Volume Manager",
        "description": "Docker volume management and configuration",
        "file_path": "src/services/infrastructure/volume_manager.py",
        "config": "config/infrastructure/volume_config.json",
        "exact_config_spec": {
          "volume_driver": "local",
          "backup_enabled": true,
          "compression_enabled": true,
          "retention_days": 30,
          "auto_cleanup": true
        }
      }
    ],
    "configs": [
      {
        "config_id": "DOCKER_CORE_CONFIG",
        "name": "Docker Core Configuration",
        "description": "Configuration for Docker core environment",
        "file_path": "config/infrastructure/docker_core_config.json",
        "schema": "docker_core_config_schema",
        "exact_schema": {
          "type": "object",
          "properties": {
            "docker_compose_version": {"type": "string", "pattern": "^3\\.[0-9]+$"},
            "network_subnet": {"type": "string", "format": "ipv4-cidr"},
            "monitoring_subnet": {"type": "string", "format": "ipv4-cidr"},
            "services_subnet": {"type": "string", "format": "ipv4-cidr"},
            "storage_subnet": {"type": "string", "format": "ipv4-cidr"},
            "databases_subnet": {"type": "string", "format": "ipv4-cidr"}
          },
          "required": ["docker_compose_version", "network_subnet", "monitoring_subnet", "services_subnet", "storage_subnet", "databases_subnet"]
        }
      },
      {
        "config_id": "NETWORK_CONFIG",
        "name": "Network Configuration",
        "description": "Configuration for Docker networks",
        "file_path": "config/infrastructure/network_config.json",
        "schema": "network_config_schema",
        "exact_schema": {
          "type": "object",
          "properties": {
            "network_driver": {"type": "string", "enum": ["bridge", "host", "overlay"]},
            "enable_ipv6": {"type": "boolean"},
            "internal_networks": {"type": "boolean"},
            "network_attachable": {"type": "boolean"},
            "network_labels": {"type": "array", "items": {"type": "string"}}
          },
          "required": ["network_driver", "enable_ipv6", "internal_networks", "network_attachable", "network_labels"]
        }
      },
      {
        "config_id": "VOLUME_CONFIG",
        "name": "Volume Configuration",
        "description": "Configuration for Docker volumes",
        "file_path": "config/infrastructure/volume_config.json",
        "schema": "volume_config_schema",
        "exact_schema": {
          "type": "object",
          "properties": {
            "volume_driver": {"type": "string", "enum": ["local", "nfs", "cifs"]},
            "backup_enabled": {"type": "boolean"},
            "compression_enabled": {"type": "boolean"},
            "retention_days": {"type": "integer", "minimum": 1, "maximum": 365},
            "auto_cleanup": {"type": "boolean"}
          },
          "required": ["volume_driver", "backup_enabled", "compression_enabled", "retention_days", "auto_cleanup"]
        }
      }
    ]
  },
  "kitchen_orchestrator": {
    "orchestration_steps": [
      {
        "step_id": "DOCKER_CORE_ORCHESTRATION_01",
        "name": "Environment Validation",
        "description": "Validate Docker environment prerequisites",
        "exact_commands": [
          "docker --version",
          "docker-compose --version",
          "docker system info",
          "free -h",
          "df -h"
        ],
        "expected_outputs": [
          "Docker version 24.0+",
          "Docker Compose version 2.20+",
          "System info shows healthy Docker daemon",
          "Available memory >= 16GB",
          "Available disk space >= 100GB"
        ]
      },
      {
        "step_id": "DOCKER_CORE_ORCHESTRATION_02",
        "name": "Task Execution",
        "description": "Execute all Docker core tasks in sequence",
        "exact_commands": [
          "# Execute Task 1: Docker Environment Setup",
          "mkdir -p /opt/ai-q/{data,config,logs,backups}",
          "chmod 755 /opt/ai-q",
          "mkdir -p /opt/ai-q/docker/{compose,volumes,networks}",
          "chmod 755 /opt/ai-q/docker",
          "docker system prune -f",
          "docker volume prune -f",
          "",
          "# Execute Task 2: Network Architecture Setup",
          "docker network create ai-q-network --subnet=172.20.0.0/16 --driver bridge",
          "docker network create ai-q-monitoring --subnet=172.21.0.0/16 --driver bridge",
          "docker network create ai-q-services --subnet=172.22.0.0/16 --driver bridge",
          "docker network create ai-q-storage --subnet=172.23.0.0/16 --driver bridge",
          "docker network create ai-q-databases --subnet=172.24.0.0/16 --driver bridge",
          "",
          "# Execute Task 3: Volume Management Setup",
          "docker volume create ai-q-data",
          "docker volume create ai-q-config",
          "docker volume create ai-q-logs",
          "docker volume create ai-q-backups",
          "docker volume create ai-q-cache"
        ],
        "validation_commands": [
          "ls -la /opt/ai-q/",
          "docker network ls --filter name=ai-q",
          "docker volume ls --filter name=ai-q"
        ]
      },
      {
        "step_id": "DOCKER_CORE_ORCHESTRATION_03",
        "name": "Final Validation",
        "description": "Validate complete Docker core setup",
        "exact_commands": [
          "docker ps --format 'table {{.Names}}\t{{.Status}}\t{{.Ports}}'",
          "docker network ls --filter name=ai-q",
          "docker volume ls --filter name=ai-q",
          "docker system df",
          "ls -la /opt/ai-q/"
        ],
        "expected_outputs": [
          "No running containers (clean state)",
          "5 ai-q networks created",
          "5 ai-q volumes created",
          "System shows healthy Docker state",
          "Directory structure properly created"
        ]
      }
    ]
  },
  "performance_benchmarks": {
    "execution_time_target": "90 minutes maximum",
    "memory_usage_target": "Less than 2GB during setup",
    "disk_usage_target": "Less than 1GB for Docker core setup",
    "network_creation_time": "Less than 30 seconds per network",
    "volume_creation_time": "Less than 10 seconds per volume",
    "validation_time": "Less than 60 seconds for all validations"
  },
  "troubleshooting_guide": {
    "common_issues": [
      {
        "issue": "Docker daemon not running",
        "symptoms": ["docker: command not found", "Cannot connect to the Docker daemon"],
        "solution": "Start Docker daemon: sudo systemctl start docker",
        "prevention": "Ensure Docker is installed and configured to start on boot"
      },
      {
        "issue": "Insufficient permissions",
        "symptoms": ["Permission denied", "Operation not permitted"],
        "solution": "Add user to docker group: sudo usermod -aG docker $USER",
        "prevention": "Configure proper user permissions for Docker operations"
      },
      {
        "issue": "Network already exists",
        "symptoms": ["Error response from daemon: network with name ai-q-network already exists"],
        "solution": "Remove existing network: docker network rm ai-q-network",
        "prevention": "Check for existing networks before creation"
      },
      {
        "issue": "Volume already exists",
        "symptoms": ["Error response from daemon: volume with name ai-q-data already exists"],
        "solution": "Remove existing volume: docker volume rm ai-q-data",
        "prevention": "Check for existing volumes before creation"
      },
      {
        "issue": "Insufficient disk space",
        "symptoms": ["no space left on device", "ENOSPC"],
        "solution": "Clean up Docker system: docker system prune -a -f",
        "prevention": "Monitor disk space and set up automated cleanup"
      }
    ],
    "diagnostic_commands": [
      "docker system info",
      "docker system df",
      "df -h",
      "free -h",
      "docker network ls",
      "docker volume ls"
    ]
  },
  "acceptance_criteria": {
    "environment_setup": [
      "Docker environment properly configured with exact specifications",
      "All required directories created with correct permissions",
      "Docker system cleaned and optimized",
      "Environment ready for service deployment"
    ],
    "network_architecture": [
      "All 5 networks created with correct subnet configurations",
      "Networks isolated and properly configured",
      "Network inspection shows correct IPAM settings",
      "Networks ready for service connectivity"
    ],
    "volume_management": [
      "All 5 volumes created and properly configured",
      "Volumes accessible and ready for data persistence",
      "Volume inspection shows correct mount points",
      "Volume management system operational"
    ],
    "overall_system": [
      "Docker core foundation operational",
      "All components can be safely installed/uninstalled",
      "Zero technical debt introduced",
      "System ready for next phase deployment"
    ]
  }
} 