{
  "port_assignments_metadata": {
    "title": "Canonical Port Assignment List - ai-Q Recipe Library",
    "version": "1.0.0",
    "created_by": "Claude Sonnet 4",
    "creation_date": "2025-07-06T16:30:00Z",
    "status": "ACTIVE_MAINTENANCE",
    "priority": "critical",
    "purpose": "Central reference for all port assignments across the ai-Q recipe library to prevent conflicts"
  },
  "reserved_ports": {
    "3000": {
      "service": "Open WebUI (OWU)",
      "purpose": "Frontend interface",
      "recipe": "02-ai-services",
      "status": "RESERVED",
      "notes": "Must always be 3000 for frontend access"
    }
  },
  "assigned_ports": {
    "3001": {
      "service": "Grafana",
      "purpose": "Monitoring dashboard",
      "recipe": "01-infrastructure/01-core-infrastructure/01-02-system-monitoring.json",
      "status": "ASSIGNED",
      "notes": "Moved from 3000 to avoid conflict with Open WebUI"
    },
    "3002": {
      "service": "Collaboration Platform",
      "purpose": "Team collaboration interface",
      "recipe": "10-collaboration-platform",
      "status": "RESERVED",
      "notes": "Available for collaboration platform"
    },
    "3003": {
      "service": "Gitea",
      "purpose": "Git repository management",
      "recipe": "01-infrastructure/02-unified-docker-system",
      "status": "ASSIGNED",
      "notes": "Moved from 3002 to avoid conflict"
    },
    "8080": {
      "service": "NextCloud",
      "purpose": "File storage and sharing",
      "recipe": "01-infrastructure/02-unified-docker-system",
      "status": "ASSIGNED",
      "notes": "File storage service"
    },
    "8081": {
      "service": "cAdvisor",
      "purpose": "Container monitoring",
      "recipe": "01-infrastructure/01-core-infrastructure/01-02-system-monitoring.json",
      "status": "ASSIGNED",
      "notes": "Container metrics collection"
    },
    "9090": {
      "service": "Prometheus",
      "purpose": "Metrics collection and storage",
      "recipe": "01-infrastructure/01-core-infrastructure/01-02-system-monitoring.json",
      "status": "ASSIGNED",
      "notes": "Monitoring metrics database"
    },
    "9093": {
      "service": "AlertManager",
      "purpose": "Alert routing and notification",
      "recipe": "01-infrastructure/01-core-infrastructure/01-02-system-monitoring.json",
      "status": "ASSIGNED",
      "notes": "Alert management service"
    },
    "9100": {
      "service": "Node Exporter",
      "purpose": "System metrics collection",
      "recipe": "01-infrastructure/01-core-infrastructure/01-02-system-monitoring.json",
      "status": "ASSIGNED",
      "notes": "Host system metrics"
    },
    "11000": {
      "service": "Ollama",
      "purpose": "Local LLM inference",
      "recipe": "01-infrastructure/02-unified-docker-system",
      "status": "ASSIGNED",
      "notes": "AI model serving"
    },
    "11001": {
      "service": "Open WebUI (Internal)",
      "purpose": "Open WebUI internal port",
      "recipe": "01-infrastructure/02-unified-docker-system",
      "status": "ASSIGNED",
      "notes": "Internal port, external mapped to 3000"
    },
    "5432": {
      "service": "PostgreSQL",
      "purpose": "Database",
      "recipe": "01-infrastructure/02-unified-docker-system",
      "status": "ASSIGNED",
      "notes": "Primary database"
    },
    "6379": {
      "service": "Redis",
      "purpose": "Cache and session storage",
      "recipe": "01-infrastructure/02-unified-docker-system",
      "status": "ASSIGNED",
      "notes": "In-memory data store"
    },
    "9000": {
      "service": "MinIO API",
      "purpose": "Object storage API",
      "recipe": "01-infrastructure/02-unified-docker-system",
      "status": "ASSIGNED",
      "notes": "S3-compatible object storage"
    },
    "9001": {
      "service": "MinIO Console",
      "purpose": "Object storage management UI",
      "recipe": "01-infrastructure/02-unified-docker-system",
      "status": "ASSIGNED",
      "notes": "MinIO web interface"
    },
    "222": {
      "service": "Gitea SSH",
      "purpose": "Git SSH access",
      "recipe": "01-infrastructure/02-unified-docker-system",
      "status": "ASSIGNED",
      "notes": "SSH port for Git operations"
    },
    "5601": {
      "service": "Kibana",
      "purpose": "Log visualization and search",
      "recipe": "01-infrastructure/01-core-infrastructure/01-03-logging-infrastructure.json",
      "status": "ASSIGNED",
      "notes": "ELK stack web interface"
    },
    "9200": {
      "service": "Elasticsearch HTTP",
      "purpose": "Elasticsearch REST API",
      "recipe": "01-infrastructure/01-core-infrastructure/01-03-logging-infrastructure.json",
      "status": "ASSIGNED",
      "notes": "Elasticsearch HTTP interface"
    },
    "9300": {
      "service": "Elasticsearch Transport",
      "purpose": "Elasticsearch node communication",
      "recipe": "01-infrastructure/01-core-infrastructure/01-03-logging-infrastructure.json",
      "status": "ASSIGNED",
      "notes": "Elasticsearch transport protocol"
    },
    "5044": {
      "service": "Logstash Beats",
      "purpose": "Logstash input for Beats",
      "recipe": "01-infrastructure/01-core-infrastructure/01-03-logging-infrastructure.json",
      "status": "ASSIGNED",
      "notes": "Logstash input port for Filebeat"
    },
    "9600": {
      "service": "Logstash API",
      "purpose": "Logstash monitoring API",
      "recipe": "01-infrastructure/01-core-infrastructure/01-03-logging-infrastructure.json",
      "status": "ASSIGNED",
      "notes": "Logstash monitoring and statistics"
    }
  },
  "available_ports": {
    "3004": {
      "status": "AVAILABLE",
      "notes": "Available for future services"
    },
    "3005": {
      "status": "AVAILABLE",
      "notes": "Available for future services"
    },
    "3006": {
      "status": "AVAILABLE",
      "notes": "Available for future services"
    },
    "3007": {
      "status": "AVAILABLE",
      "notes": "Available for future services"
    },
    "3008": {
      "status": "AVAILABLE",
      "notes": "Available for future services"
    },
    "3009": {
      "status": "AVAILABLE",
      "notes": "Available for future services"
    },
    "8082": {
      "status": "AVAILABLE",
      "notes": "Available for future services"
    },
    "8083": {
      "status": "AVAILABLE",
      "notes": "Available for future services"
    },
    "8084": {
      "status": "AVAILABLE",
      "notes": "Available for future services"
    },
    "8085": {
      "status": "AVAILABLE",
      "notes": "Available for future services"
    }
  },
  "port_assignment_rules": {
    "rule_1": "Port 3000 is RESERVED for Open WebUI (OWU) - no other service can use it",
    "rule_2": "All port assignments must be documented in this file before implementation",
    "rule_3": "Port conflicts must be resolved by moving services to available ports",
    "rule_4": "Health checks and validation commands must use the correct assigned ports",
    "rule_5": "Docker Compose files must map external ports to internal ports correctly",
    "rule_6": "All recipes must reference this canonical list for port assignments"
  },
  "maintenance_notes": {
    "last_updated": "2025-01-30T23:45:00Z",
    "updated_by": "Claude Sonnet 4",
    "changes_made": [
      "Created canonical port assignment list",
      "Moved Grafana from port 3000 to 3001",
      "Reserved port 3000 for Open WebUI",
      "Documented all current port assignments"
    ],
    "next_review": "After completing all recipe audits"
  }
} 