# NEXT AGENT INSTRUCTIONS - AI-Q PROJECT CONTINUATION
# COMPREHENSIVE HANDOFF WITH SPECIFIC TASKS
# TOKEN COUNT: ~15,000 tokens
---
version: "1.0.0"
last_updated: "2025-01-27T22:00:00Z"
created_by: "Claude Sonnet 4"
purpose: >
  Comprehensive instructions for the next agent to continue AI-Q project
  development with error review, recipe system overhaul, and granular
  implementation planning.

# CRITICAL ASSUMPTION
critical_assumption: >
  ASSUME THE PREVIOUS AGENT MADE ERRORS. Review everything critically,
  identify issues, and provide analysis and recommendations for improvement.
  Do not trust previous work without verification.

# PHASE 1: ERROR REVIEW & ANALYSIS
phase_1_error_review:
  task_1_1_comprehensive_review:
    description: "Review all previous work and identify errors"
    scope:
      - "Review AI-Q_PROJECT_DESIGN_MANUAL.yml"
      - "Review all recipe files in ai-Q/recipes/"
      - "Review node specifications in griot-main/ai-q/03_node_specifications/"
      - "Review system architecture and technical decisions"
    deliverables:
      - "Error analysis report"
      - "Issue identification list"
      - "Recommendations for fixes"
      - "Priority ranking of issues"
    success_criteria:
      - "All errors identified and documented"
      - "Root cause analysis completed"
      - "Fix recommendations provided"
      - "Impact assessment completed"

  task_1_2_recipe_system_analysis:
    description: "Analyze current recipe system and identify problems"
    scope:
      - "Review recipe format and structure"
      - "Analyze recipe content quality"
      - "Check recipe completeness"
      - "Evaluate recipe usability"
    deliverables:
      - "Recipe system analysis report"
      - "Recipe format recommendations"
      - "Content quality assessment"
      - "Usability improvement suggestions"
    success_criteria:
      - "Recipe system problems identified"
      - "Format improvements recommended"
      - "Content gaps documented"
      - "Usability issues addressed"

# PHASE 2: ARCHIVE SCRIPT CREATION
phase_2_archive_script:
  task_2_1_archive_script_development:
    description: "Create archive script with specified requirements"
    requirements:
      - "Script accepts command line arguments"
      - "Excludes common directories: venv, node_modules, .git"
      - "Excludes specific path: E:\\kos\\ai-Q\\archives"
      - "Handles different file types appropriately"
      - "Creates organized archive structure"
      - "Includes metadata and documentation"
    script_features:
      - "Command line argument parsing"
      - "Directory exclusion logic"
      - "File type detection and handling"
      - "Archive compression and organization"
      - "Progress reporting and logging"
      - "Error handling and recovery"
    deliverables:
      - "Python archive script (archive_project.py)"
      - "Script documentation and usage guide"
      - "Example usage scenarios"
      - "Error handling documentation"
    success_criteria:
      - "Script works with command line arguments"
      - "Properly excludes specified directories"
      - "Handles errors gracefully"
      - "Creates organized archives"

# PHASE 3: USER STORIES GENERATION
phase_3_user_stories:
  task_3_1_comprehensive_user_analysis:
    description: "Generate user stories for all user types"
    user_categories:
      developers:
        - "Software developers"
        - "DevOps engineers"
        - "System administrators"
        - "Technical leads"
        - "Architects"
      end_users:
        - "Content creators"
        - "Researchers"
        - "Students"
        - "Business users"
        - "Creative professionals"
      administrators:
        - "System administrators"
        - "IT managers"
        - "Security officers"
        - "Compliance officers"
        - "Support staff"
      specialized_users:
        - "AI researchers"
        - "Data scientists"
        - "UX designers"
        - "Product managers"
        - "Quality assurance"
    deliverables:
      - "Comprehensive user story collection"
      - "User journey maps"
      - "Use case scenarios"
      - "User requirement analysis"
    success_criteria:
      - "100+ user stories generated"
      - "All user categories covered"
      - "Detailed user journeys mapped"
      - "Requirements clearly identified"

  task_3_2_component_breakdown:
    description: "Break down system into smallest working components"
    analysis_approach:
      - "Analyze user stories for common patterns"
      - "Identify reusable components"
      - "Define component interfaces"
      - "Map component dependencies"
      - "Determine component granularity"
    deliverables:
      - "Component hierarchy diagram"
      - "Component specification list"
      - "Interface definitions"
      - "Dependency mapping"
    success_criteria:
      - "Components identified at appropriate granularity"
      - "Interfaces clearly defined"
      - "Dependencies mapped"
      - "Reusability maximized"

# PHASE 4: RECIPE SYSTEM OVERHAUL
phase_4_recipe_overhaul:
  task_4_1_recipe_format_redesign:
    description: "Redesign recipe format for optimal context window usage"
    context_window_requirements:
      sub_2000_tokens:
        - "Simple tasks and components"
        - "Basic operations"
        - "Quick fixes and utilities"
      medium_tokens_2000_8000:
        - "Standard features and components"
        - "Integration tasks"
        - "Configuration and setup"
      large_tokens_8000_80000:
        - "Complex features and systems"
        - "Multi-component integrations"
        - "Complete workflows and pipelines"
      max_120000_tokens:
        - "Complete system implementations"
        - "Enterprise-level features"
        - "Full recipe collections"
    recipe_format_requirements:
      - "Structured and consistent format"
      - "Clear task definitions"
      - "Dependency specifications"
      - "Success criteria"
      - "Error handling"
      - "Testing instructions"
    deliverables:
      - "New recipe format specification"
      - "Recipe template collection"
      - "Format validation rules"
      - "Recipe creation guidelines"
    success_criteria:
      - "Format optimized for context windows"
      - "Templates cover all complexity levels"
      - "Validation rules comprehensive"
      - "Guidelines clear and actionable"

  task_4_2_ingredient_system_redesign:
    description: "Redesign ingredient system for maximum modularity"
    ingredient_requirements:
      - "Atomic and composable"
      - "Version controlled"
      - "Dependency managed"
      - "Testable and verifiable"
      - "Reusable across recipes"
    ingredient_categories:
      - "Database operations"
      - "API integrations"
      - "UI components"
      - "AI/ML operations"
      - "Security features"
      - "Performance optimizations"
    deliverables:
      - "Ingredient specification format"
      - "Ingredient catalog structure"
      - "Dependency resolution system"
      - "Ingredient testing framework"
    success_criteria:
      - "Ingredients truly atomic"
      - "Dependencies clearly managed"
      - "Testing framework functional"
      - "Catalog well organized"

# PHASE 5: GRANULAR IMPLEMENTATION PLAN
phase_5_implementation_planning:
  task_5_1_detailed_breakdown:
    description: "Create granular implementation plan with small steps"
    planning_requirements:
      - "Break down to 1-4 hour tasks"
      - "Define clear dependencies"
      - "Estimate effort and complexity"
      - "Identify resource requirements"
      - "Plan for parallel development"
    planning_areas:
      infrastructure:
        - "Local development environment"
        - "Docker containerization"
        - "Database setup and configuration"
        - "Network and security setup"
      core_system:
        - "Next.js frontend foundation"
        - "Weaviate vector database"
        - "Ollama LLM integration"
        - "Basic API structure"
      node_implementation:
        - "Griot node (seed node)"
        - "Yachay node (librarian)"
        - "Tohunga node (sensory organ)"
        - "Skald node (creator)"
        - "Musa node (security)"
        - "Hakim node (health)"
      features:
        - "Chat interface"
        - "Document processing"
        - "Knowledge management"
        - "Component registry"
        - "Recipe system"
    deliverables:
      - "Detailed task breakdown"
      - "Dependency graph"
      - "Timeline and milestones"
      - "Resource allocation plan"
    success_criteria:
      - "Tasks granular enough for 1-4 hours"
      - "Dependencies clearly mapped"
      - "Timeline realistic and achievable"
      - "Resources properly allocated"

  task_5_2_agent_work_tracking:
    description: "Design agent work tracking system"
    tracking_requirements:
      - "Task assignment and tracking"
      - "Progress monitoring"
      - "Quality assurance"
      - "Issue tracking and resolution"
      - "Performance metrics"
    tracking_system_features:
      - "Task management interface"
      - "Progress reporting"
      - "Quality checkpoints"
      - "Issue escalation"
      - "Performance analytics"
    deliverables:
      - "Tracking system specification"
      - "Workflow definitions"
      - "Quality assurance procedures"
      - "Performance metrics framework"
    success_criteria:
      - "Tracking system comprehensive"
      - "Workflows clearly defined"
      - "QA procedures effective"
      - "Metrics meaningful"

  task_5_3_documentation_system:
    description: "Design comprehensive documentation system"
    documentation_requirements:
      - "Technical documentation"
      - "User documentation"
      - "API documentation"
      - "Deployment guides"
      - "Troubleshooting guides"
    documentation_types:
      - "Architecture documentation"
      - "Component documentation"
      - "Recipe documentation"
      - "User guides"
      - "Developer guides"
      - "Administrator guides"
    deliverables:
      - "Documentation structure"
      - "Documentation templates"
      - "Documentation workflow"
      - "Documentation standards"
    success_criteria:
      - "Documentation structure comprehensive"
      - "Templates cover all types"
      - "Workflow efficient"
      - "Standards clear"

# PHASE 6: ENTERPRISE READINESS
phase_6_enterprise_readiness:
  task_6_1_production_best_practices:
    description: "Implement enterprise-ready production best practices"
    best_practices_areas:
      security:
        - "Authentication and authorization"
        - "Data encryption"
        - "Security monitoring"
        - "Vulnerability management"
      performance:
        - "Load balancing"
        - "Caching strategies"
        - "Database optimization"
        - "Monitoring and alerting"
      reliability:
        - "High availability"
        - "Disaster recovery"
        - "Backup strategies"
        - "Error handling"
      scalability:
        - "Horizontal scaling"
        - "Microservices architecture"
        - "Database scaling"
        - "Resource management"
    deliverables:
      - "Best practices implementation plan"
      - "Security framework"
      - "Performance optimization strategy"
      - "Reliability and scalability plan"
    success_criteria:
      - "Best practices comprehensive"
      - "Security framework robust"
      - "Performance strategy effective"
      - "Scalability plan realistic"

# PHASE 7: QUALITY ASSURANCE
phase_7_quality_assurance:
  task_7_1_comprehensive_review:
    description: "Double check all work and fix issues"
    review_areas:
      - "Technical accuracy"
      - "Completeness"
      - "Consistency"
      - "Usability"
      - "Maintainability"
    review_process:
      - "Self-review of all deliverables"
      - "Cross-reference with requirements"
      - "Identify gaps and inconsistencies"
      - "Fix identified issues"
      - "Validate fixes"
    deliverables:
      - "Review report"
      - "Issue fix documentation"
      - "Updated deliverables"
      - "Quality assurance report"
    success_criteria:
      - "All issues identified and fixed"
      - "Deliverables complete and accurate"
      - "Quality standards met"
      - "Documentation updated"

  task_7_2_comprehensive_analysis:
    description: "Create comprehensive analysis of entire system"
    analysis_areas:
      technical_analysis:
        - "Architecture review"
        - "Technology stack assessment"
        - "Performance analysis"
        - "Security analysis"
      implementation_analysis:
        - "Feasibility assessment"
        - "Risk analysis"
        - "Resource requirements"
        - "Timeline validation"
      business_analysis:
        - "Value proposition"
        - "Market fit"
        - "Competitive analysis"
        - "ROI assessment"
    deliverables:
      - "Comprehensive analysis report"
      - "Risk assessment"
      - "Recommendations"
      - "Next steps plan"
    success_criteria:
      - "Analysis comprehensive and accurate"
      - "Risks properly assessed"
      - "Recommendations actionable"
      - "Next steps clear"

# PHASE 8: HANDOFF PREPARATION
phase_8_handoff_preparation:
  task_8_1_handoff_documentation:
    description: "Prepare comprehensive handoff for next agent"
    handoff_requirements:
      - "Complete project status"
      - "All deliverables and artifacts"
      - "Current issues and challenges"
      - "Next steps and priorities"
      - "Lessons learned"
    handoff_documents:
      - "Project status report"
      - "Deliverables inventory"
      - "Issue tracking document"
      - "Next agent instructions"
      - "Knowledge transfer document"
    deliverables:
      - "Handoff package"
      - "Next agent instructions"
      - "Project status documentation"
      - "Knowledge transfer materials"
    success_criteria:
      - "Handoff comprehensive"
      - "Instructions clear"
      - "Status accurate"
      - "Knowledge transferred"

# EXECUTION ORDER
execution_order:
  phase_1: "Error Review & Analysis (CRITICAL)"
  phase_2: "Archive Script Creation (HIGH)"
  phase_3: "User Stories Generation (CRITICAL)"
  phase_4: "Recipe System Overhaul (CRITICAL)"
  phase_5: "Granular Implementation Planning (CRITICAL)"
  phase_6: "Enterprise Readiness (HIGH)"
  phase_7: "Quality Assurance (CRITICAL)"
  phase_8: "Handoff Preparation (CRITICAL)"

# SUCCESS CRITERIA
success_criteria:
  overall_success:
    - "All phases completed successfully"
    - "Deliverables meet quality standards"
    - "Issues identified and resolved"
    - "Next agent ready to continue"
  quality_standards:
    - "Technical accuracy 95%+"
    - "Completeness 100%"
    - "Usability excellent"
    - "Maintainability high"
  handoff_quality:
    - "Next agent has clear understanding"
    - "All artifacts properly documented"
    - "Issues and challenges identified"
    - "Next steps clearly defined"

# CRITICAL REMINDERS
critical_reminders:
  - "ASSUME PREVIOUS AGENT MADE ERRORS - review everything critically"
  - "Focus on granular breakdown - smallest working components"
  - "Consider context window limitations in recipe design"
  - "Prioritize enterprise-ready production best practices"
  - "Document everything thoroughly for next agent"
  - "Quality over speed - thorough review and validation"
  - "Think modular and reusable - avoid monolithic approaches"
  - "Consider all user types and use cases"
  - "Plan for scalability and maintainability"
  - "Prepare comprehensive handoff for continuity" 